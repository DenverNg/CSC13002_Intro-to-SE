<!DOCTYPE html>
<html lang="en">
    <head>
        <title>SEBANK</title>
        <meta charset="utf-8">
        <link rel="stylesheet" href="/css/main.css">
        <script src="/js/func.js"></script>
		<link rel="stylesheet" href="/css/table.css">
         <!--JSPDF-->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.13/jspdf.plugin.autotable.min.js"></script> 
        <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.4/xlsx.full.min.js"></script>
        <script src="/js/table.js"></script>
        <link rel="stylesheet" href="/css/dropdown.css">
        <script src="/js/dropdown.js"></script>
        <link rel="stylesheet" href="/css/tab.css">
        <script src="/js/tab.js"></script>
        <!-- <link rel="stylesheet" href="/css/input_report.css">
        <script src="/js/input.js"></script> -->
        <link rel="stylesheet" href="/css/input.css">
        <link rel="stylesheet" href="/css/createbook.css">
       
        <!-- Linking Google Font Link for Icon -->
        <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
		<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
        <link rel="stylesheet" href="https://unicons.iconscout.com/release/v4.0.0/css/line.css">
    </head>
    <body>
        <div class="container" style="width: 100%;">
            <aside class="sidebar" style="z-index: 99">
                <img src="/images/SEBank.png" alt="logo-hover" class="sidebar-img-default" />
                <img src="/images/Logo.png" alt="logo-hover" class="sidebar-img-hover" />
                <ul class="sidebar-links">
                    <li data-content="Dashboard">
                        <a href="/#">
                            <span class="material-icons" style="font-size: 35px">
                                home
                            </span> Trang chủ
                        </a>
                    </li>
                    <li data-content="Manage">
                        <a href="/quan_ly_so#">
                            <span class="material-icons" style="font-size: 35px">
                                manage_search
                                </span>Quản lý sổ
                        </a>
                    </li>
                    <li class="active">
                        <a href="/bao_cao_ngay#">
                            <span class="material-icons" style="font-size: 35px">
                                description
                            </span> Báo cáo
                        </a>
                    </li>
                    <li>
                        <a href="/mat_khau#">
                            <span class="material-icons" style="font-size: 35px">
                            settings
                            </span> Cài đặt
                        </a>
                    </li>
                </ul>
            </aside>
        
            <div class = "main">
                <!-- Quản lý sổ -->
                <div class="content" id="Report">
                    <!-- Tabs -->
                    <div class="tabs">
                        <div class="tab-item active">
                            <a href="/bao_cao_ngay">
                                <i class="tab-icon fas fa-code"></i>
                                Báo cáo doanh số
                            </a>
                        </div>
                        <div class="tab-item">
                            <a href="/bao_cao_thang">
                                <i class="tab-icon fas fa-cog"></i>
                                Báo cáo đóng/mở
                            </a>
                        </div>
                        <div class="line"></div>
                    </div>
                    
                    <!-- Daily Report Content -->
                    <div class="tab-content">
                        <div class="tab-pane active">
                            <div class="topbar-report">
                                Báo Cáo Doanh Số Hoạt Động Ngày
                            </div>
                            <div class="subheader">
                                <div class="EnterValue">
                                    <form action="/bao_cao_ngay#" method="POST">
                                        <div id="input-date" class="form-group inp-createbook">
                                            <input id="date" class="form-group__input inp-createbook__input" type="date" name="NGAY" placeholder=" " value="<%= currentDate %>">
                                            <label for="date" class="form-group__title form-group__input__title inp-createbook__title">Ngày báo cáo</label>
                                            <span id="input-name-message" class="form-group__message"></span>
                                        </div>
                                        <button type="submit" class="form-group__button submit-button" name="action" value="confirm">Xem báo cáo</button>
                                    </form>
                                </div>
                                <div class="Function">
                                    <div class="icon" id="download-daily">
                                        <span class="material-symbols-outlined" style="font-size: 40px">download</span>
                                        Tải báo cáo
                                    </div>
                                    <div class="icon" id="print-daily">
                                        <span class="material-icons" style="font-size: 40px">print</span>
                                        In báo cáo
                                    </div>
                                </div>
                            </div>
            
                            
                            <section class="table__body">
                                <table id="Daily-Report">
                                        <thead>
                                            <tr>
                                                <th> STT </th>
                                                <th> Loại tiết kiệm <span class="icon-arrow">&UpArrow;</span></th>
                                                <th> Tổng thu <span class="icon-arrow">&UpArrow;</span></th>
                                                <th> Tổng chi <span class="icon-arrow">&UpArrow;</span></th>
                                                <th> Chênh lệch <span class="icon-arrow">&UpArrow;</span></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <% for (let i = 0; i < listDailyRP.length; i++) { %>
                                                <tr>
                                                    <td><%=i+1%></td>
                                                    <td><%=listDailyRP[i].KYHAN%></td>
                                                    <td><%= listDailyRP[i].TONGTHU %></td>
                                                    <td><%= listDailyRP[i].TONGCHI %></td>
                                                    <% if (listDailyRP[i].CHENHLECH > 0) { %>
                                                        <td>
                                                            <p style="color: rgb(73, 155, 73);"><%=listDailyRP[i].CHENHLECH%></p>
                                                        </td>
                                                    <% } else if (listDailyRP[i].CHENHLECH == 0) { %>
                                                        <td>
                                                            <p style="color: black;"><%=listDailyRP[i].CHENHLECH%></p>
                                                        </td>
                                                    <% } else { %>
                                                        <td>
                                                            <p style="color: red;"><%=listDailyRP[i].CHENHLECH%></p>
                                                        </td>
                                                    <% } %>
                                                </tr>
                                            <% } %>
                                        </tbody>
                                    </table>
                            </section>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <script>
            // Convert HTML table to PDF
            const formatDate = (date) => {
                    const day = String(date.getDate()).padStart(2, '0');
                    const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are zero-indexed
                    const year = date.getFullYear();
                    return `${day}-${month}-${year}`;
                };
            
            const pdf_btn = document.querySelector('#print-daily');
            const customers_table = document.querySelector('#Daily-Report');
            const currentDate = formatDate(new Date());

            const toPDF = function (customers_table) {
                const new_table = document.createElement("table");

                // Loop through rows and cells
                for (const row of customers_table.rows) {
                    const new_row = new_table.insertRow();
                    for (const cell of row.cells) {
                        const new_cell = new_row.insertCell();

                        // Check if cell contains text (no icons)
                        if (cell.textContent.trim() !== "") {
                            new_cell.textContent = cell.textContent;
                        }
                    }
                }

                const html_code = `
                        <!DOCTYPE html>
                        <html>
                        <head>
                            <link rel="stylesheet" href="/css/table_report.css">
                        </head>
                        <body>
                            <center>
                                <img src="/images/Report-Header.png">
                                <div class="header">Báo cáo doanh số hoạt động ngày</div>
                                Ngày : ${currentDate}   
                                <main class="table">${new_table.outerHTML}</main>
                                <img src="/images/Report-Footer.png">
                            </center>
                        </body>
                        </html>
                    `;

                const new_window = window.open();
                new_window.document.write(html_code);
                new_window.document.close(); // Ensures the document is ready for printing

                setTimeout(() => {
                    new_window.print();
                    new_window.close();
                }, 400);
            }

            pdf_btn.onclick = () => {
                toPDF(customers_table);
            }
            
            const excel_btn = document.querySelector('#download-daily');

                const toExcel = function (table, title) {
                    const workbook = XLSX.utils.book_new();
                    const ws_data = [];

                    // Title row
                    ws_data.push([title]);

                    // Date row
                    ws_data.push([`NGÀY: ${currentDate}`]);

                    // Empty row
                    ws_data.push([]);

                    // Extract headers
                    const headers = [...table.querySelectorAll('thead th')].map(th => th.textContent.trim());
                    ws_data.push(headers);

                    // Extract rows
                    const rows = table.querySelectorAll('tbody tr');
                    rows.forEach(row => {
                        const rowData = [...row.querySelectorAll('td')].map(td => td.textContent.trim());
                        ws_data.push(rowData);
                    });

                    const ws = XLSX.utils.aoa_to_sheet(ws_data);

                    // Merge cells for title and date
                    ws['!merges'] = [
                        { s: { r: 0, c: 0 }, e: { r: 0, c: headers.length - 1 } }, // Merge title
                        { s: { r: 1, c: 0 }, e: { r: 1, c: headers.length - 1 } }, // Merge date
                    ];

                    // Style the title
                    ws['A1'].s = {
                        font: { sz: 18, bold: true, color: { rgb: "FF0000" } }, // Red color
                        alignment: { horizontal: 'center', vertical: 'center' },
                    };

                    // Style the date row
                    ws['A2'].s = {
                        font: { sz: 12 },
                        alignment: { horizontal: 'center', vertical: 'center' },
                    };

                    // Style the headers
                    const headerStyle = {
                        font: { sz: 12, bold: true },
                        fill: { fgColor: { rgb: "FFFF00" } }, // Yellow background
                        alignment: { horizontal: 'center', vertical: 'center' },
                        border: {
                            top: { style: 'thin' },
                            bottom: { style: 'thin' },
                            left: { style: 'thin' },
                            right: { style: 'thin' },
                        },
                    };

                    // Apply header style
                    headers.forEach((_, i) => {
                        const cellRef = XLSX.utils.encode_cell({ c: i, r: 3 });
                        ws[cellRef].s = headerStyle;
                    });

                    // Apply border to all cells
                    const range = XLSX.utils.decode_range(ws['!ref']);
                    for (let R = range.s.r; R <= range.e.r; ++R) {
                        for (let C = range.s.c; C <= range.e.c; ++C) {
                            const cell_ref = XLSX.utils.encode_cell({ r: R, c: C });
                            if (!ws[cell_ref]) continue;
                            ws[cell_ref].s = ws[cell_ref].s || {};
                            ws[cell_ref].s.border = {
                                top: { style: 'thin' },
                                bottom: { style: 'thin' },
                                left: { style: 'thin' },
                                right: { style: 'thin' },
                            };
                        }
                    }

                    // Automatically adjust column widths
                    const colWidths = [];
                    ws_data.forEach(row => {
                        row.forEach((cell, colIndex) => {
                            const length = cell ? cell.toString().length : 10; // Default length
                            if (!colWidths[colIndex] || colWidths[colIndex] < length) {
                                colWidths[colIndex] = length;
                            }
                        });
                    });

                    // Set width for columns
                    colWidths.forEach((width, i) => {
                        ws['!cols'] = ws['!cols'] || [];
                        ws['!cols'][i] = { wpx: width * 10 }; // Adjust multiplier to fit content
                    });

                    // Adjust width for column A to ensure title fits well
                    ws['!cols'][0] = { wpx: Math.max(200, (colWidths[0] || 10) * 10) }; // Ensure column A is wide enough

                    XLSX.utils.book_append_sheet(workbook, ws, "Sheet1");

                    return XLSX.write(workbook, { bookType: 'xlsx', type: 'binary' });
                }

                excel_btn.onclick = () => {
                    const excel_data = toExcel(customers_table, "BÁO CÁO DOANH SỐ HOẠT ĐỘNG NGÀY");

                    const fileName = `Daily_Report_${currentDate}.xlsx`;
                    const blob = new Blob([s2ab(excel_data)], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
                    const link = document.createElement('a');
                    link.href = URL.createObjectURL(blob);
                    link.download = fileName;
                    document.body.appendChild(link);
                    link.click();
                    document.body.removeChild(link);
                }

                // Convert binary string to ArrayBuffer
                function s2ab(s) {
                    const buf = new ArrayBuffer(s.length);
                    const view = new Uint8Array(buf);
                    for (let i = 0; i < s.length; i++) {
                        view[i] = s.charCodeAt(i) & 0xFF;
                    }
                    return buf;
                }
        </script>
    </body>
</html>



