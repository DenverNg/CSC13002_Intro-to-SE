<!DOCTYPE html>
<html lang="en">
    <head>
        <title>Tạo sổ mới</title>
        <meta charset="utf-8">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
        <link rel="stylesheet" href="/css/general_setup.css">
        <link rel="stylesheet" href="/css/input.css">
        <link rel="stylesheet" href="/css/createbook.css">
        <link rel="stylesheet" href="/css/dropdown_createbook.css">
        <!-- Linking Google Font Link for Icon -->
        <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
        <link rel="stylesheet"
            href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
        <link rel="stylesheet" href="https://unicons.iconscout.com/release/v4.0.0/css/line.css">
        
        <script src="/js/dropdown.js"></script>
        <script src="/js/validator.js"></script>

    </head>

    <body>
        <div id="createbook-form" class="createbook">
            <div id="createbook__title">Sổ tiết kiệm</div>
            <form class="form-input" action="/taoso_form/xacnhan" method="post">
                <div id="createbook__group0">
                    <div id="createbook__group1">
                        <div id="input-MASO" class="form-group inp-createbook">
                            <input id="MASO" class="form-group__input inp-createbook__input" type="text" name="MASO" placeholder=" " value="<%= newMaSo %>" disabled>
                            <label for="MASO" class="form-group__title form-group__input__title inp-createbook__title">Mã sổ</label>
                            <span id="input-name-message" class="form-group__message"></span>
                        </div>
    
                        <div id="input-TENKH" class="form-group inp-createbook">
                            <input id="TENKH" class="form-group__input inp-createbook__input" type="text" name="TENKH" placeholder=" ">
                            <label for="TENKH" class="form-group__title form-group__input__title inp-createbook__title">Nhập tên khách hàng</label>
                            <span id="input-name-message" class="form-group__message"></span>
                        </div>
    
                        <div id="input-DIACHI" class="form-group inp-createbook">
                            <input id="DIACHI" class="form-group__input inp-createbook__input" type="text" name="DIACHI" placeholder=" ">
                            <label for="DIACHI" class="form-group__title form-group__input__title inp-createbook__title">Nhập địa chỉ</label>
                            <span id="input-name-message" class="form-group__message"></span>
                        </div>
                    </div>
    
                    <div id="createbook__group2">
                        <div class="wrapper">
                            <div class="select-createbook-btn">
                                <span id="selected-type">Chọn loại kỳ hạn</span>
                                <p class="select-createbook-btn__title">Nhập loại kỳ hạn</p>
                                <i class="uil uil-angle-down"></i>
                            </div>
                            <div class="select-createbook-content">
                                <div class="select-search">
                                    <i class="uil uil-search"></i>
                                    <input spellcheck="false" type="text" placeholder="Tìm kiếm loại kỳ hạn">
                                </div>
                                <ul class="options"></ul>
                            </div>
                        </div>
                        <div id="types">
                            <input type="hidden" name="types" value="<%= types %>">
                        </div>
                        
                        <input type="hidden" id="hidden-type" name="selectedType" value="<%= selectedType %>">
            
                        <div id="input-CMND" class="form-group inp-createbook">
                            <input id="CMND" class="form-group__input inp-createbook__input" type="text" name="CMND" placeholder=" ">
                            <label for="CMND" class="form-group__title form-group__input__title inp-createbook__title">Nhập CMND</label>
                            <span id="input-name-message" class="form-group__message"></span>
                        </div>
    
                        <div id="input-date" class="form-group inp-createbook">
                            <input id="date" class="form-group__input inp-createbook__input" type="date" name="NGAY" placeholder=" ">
                            <label for="date" class="form-group__title form-group__input__title inp-createbook__title">Ngày tạo sổ</label>
                            <span id="input-name-message" class="form-group__message"></span>
                        </div>
                    </div>
                </div>
                <div id="createbook__group3">
                    <div id="input-SOTIEN" class="form-group inp-createbook">
                        <input id="SOTIEN" class="form-group__input inp-createbook__input" type="text" name="SOTIEN" placeholder=" ">
                        <label for="SOTIEN" class="form-group__title form-group__input__title inp-createbook__title">Nhập số tiền gửi</label>
                        <span id="input-name-message" class="form-group__message"></span>
                    </div>
                
                <button id="submit-form-btn" type="submit" class="form-group__button submit-button">Tiếp tục</button>
            </div>
        </form>
    </div>

        <script>
            Validator({
                form: '#createbook-form',
                errorSelector: '.form-group__message',
                rules: [
                    Validator.isRequired('#MASO', 'Vui lòng nhập mã sổ'),
                    Validator.isRequired('#DIACHI', 'Vui lòng nhập địa chỉ'),
                    Validator.isRequired('#CMND', 'Vui lòng nhập chứng minh nhân dân'),
                    Validator.isRequired('#date', 'Vui lòng chọn ngày tạo sổ'),
                    Validator.isRequired('#SOTIEN', 'Vui lòng nhập số tiền gửi')
                ],
                onSubmit: function (formValues) {
                    // Perform your submission action here
                    console.log('Form submitted successfully!', formValues);
                }
            });

            const submitButton = document.getElementById('submit-form-btn');

                function checkFormValidity() {
                    const tenKH = document.getElementById('TENKH').value.trim();
                    const diaChi = document.getElementById('DIACHI').value.trim();
                    const cmnd = document.getElementById('CMND').value.trim();
                    const ngay = document.getElementById('date').value.trim();
                    const soTien = document.getElementById('SOTIEN').value.trim();

                    // Check if all fields are filled
                    const isFormValid = tenKH !== '' && diaChi !== '' && cmnd !== '' && ngay !== '' && soTien !== '';

                    // Enable or disable submit button based on form validity
                    submitButton.disabled = !isFormValid;
                }

                // Listen for input changes and validate the form
                document.getElementById('TENKH').addEventListener('input', checkFormValidity);
                document.getElementById('DIACHI').addEventListener('input', checkFormValidity);
                document.getElementById('CMND').addEventListener('input', checkFormValidity);
                document.getElementById('date').addEventListener('input', checkFormValidity);
                document.getElementById('SOTIEN').addEventListener('input', checkFormValidity);

                // Initial form validation on page load
                checkFormValidity();
        </script>
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                // Function to handle dropdown population
                const wrapper = document.querySelector(".wrapper"),
                    selectBtn = wrapper.querySelector(".select-createbook-btn"),
                    searchInp = wrapper.querySelector("input"),
                    options = wrapper.querySelector(".options"),
                    hiddenTypeInput = document.getElementById("hidden-type");

                const types = "<%= types %>".split(","); // Get the types from the server-side variable	
                const selectedType = "<%= selectedType %>";

                function addType() {
                    options.innerHTML = ""; // Clear the current options
                    if (selectedType) {
                        let li = `<li onclick="updateName(this)" class="selected">${selectedType}</li>`;
                        options.insertAdjacentHTML("beforeend", li);
                    }
                    types.forEach(type => {
                        if (type !== selectedType) {
                            let li = `<li onclick="updateName(this)">${type}</li>`;
                            options.insertAdjacentHTML("beforeend", li);
                        }
                    });
                }

                addType(); // Populate dropdown on page load
                const firstOption = options.querySelector('li');
                updateName(firstOption);

                function updateName(selectedLi) {
                    searchInp.value = ""; // Clear search input
                    addType(); // Refresh list with the selected type
                    selectBtn.firstElementChild.innerText = selectedLi.innerText; // Update button text with selected type
                    wrapper.classList.remove("active"); // Hide dropdown options after selection
                    hiddenTypeInput.value = selectedLi.innerText; // Update hidden input value
                }

                searchInp.addEventListener("keyup", () => {
                    let arr = [];
                    let searchedVal = searchInp.value.toLowerCase();
                    arr = types.filter(data => {
                        return data.toLowerCase().includes(searchedVal); // Filter types based on search input
                    }).map(data => {
                        let isSelected = data == selectBtn.firstElementChild.innerText ? "selected" : "";
                        return `<li onclick="updateName(this)" class="${isSelected}">${data}</li>`;
                    }).join("");
                    options.innerHTML = arr ? arr : `<p style="margin-top: 10px;">Không tìm thấy loại kỳ hạn nào</p>`; // Update dropdown with filtered list or message if no match
                });

                selectBtn.addEventListener("click", () => wrapper.classList.toggle("active")); // Toggle dropdown visibility

                options.addEventListener('click', (event) => {
                    if (event.target.tagName === 'LI') {
                        updateName(event.target);
                    }
                })
            });
        </script>
</body>